apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "wallos.fullname" . }}
  labels:
    {{- include "wallos.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "wallos.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "wallos.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "wallos.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            {{- range $key, $value := .Values.environment }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
          ports:
            - name: http
              containerPort: 80 # Internal port Wallos listens on
              protocol: TCP
          # livenessProbe:
          #   httpGet:
          #     path: / # Adjust if Wallos has a specific health check endpoint
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: / # Adjust if Wallos has a specific health check endpoint
          #     port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            {{- if .Values.persistence.db.enabled }}
            - name: db-storage
              mountPath: {{ .Values.persistence.db.mountPath }}
            {{- end }}
            {{- if .Values.persistence.logos.enabled }}
            - name: logos-storage
              mountPath: {{ .Values.persistence.logos.mountPath }}
            {{- end }}
      volumes:
        {{- if .Values.persistence.db.enabled }}
        - name: db-storage
          persistentVolumeClaim:
            claimName: {{ include "wallos.db.pvc.name" . }}
        {{- end }}
        {{- if .Values.persistence.logos.enabled }}
        - name: logos-storage
          persistentVolumeClaim:
            claimName: {{ include "wallos.logos.pvc.name" . }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}